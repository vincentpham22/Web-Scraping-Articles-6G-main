from src.extraction import *
import pandas as pd
import streamlit as st
from wordcloud import WordCloud
import matplotlib.pyplot as plt


articles = grep_articles("6g", 15)
df = pd.DataFrame(articles)
df.to_excel("articles.xlsx")

# Charger les donn√©es √† partir du fichier Excel
df = pd.read_excel("articles.xlsx")  # On charge le fichier xlsx qui contient les informations sur les articles

# Filtres Sidebar 
st.sidebar.header("Options de filtres : ")
with st.expander("Faire d√©filer pour voir les donn√©es") :
    Titre_filtre = st.sidebar.multiselect("Filtrer les articles que vous souhaitez :", options=df['Titre'].unique(), default=df['Titre'].unique())
Annee_filtre = st.sidebar.multiselect("Filtrer les dates :", options=df['Ann√©e'].unique(), default=df['Ann√©e'].unique())

# Application des filtres sur le dataframe ---> df devient donnees_filtres
donnees_filtres = df[(df["Titre"].isin(Titre_filtre)) & (df["Ann√©e"].isin(Annee_filtre))]

# Affichage du titre de la page avec Streamlit
st.title("Tableau de bord : Articles sur la 6G")  # Cr√©e un titre principal pour l'application

# Affichage des donn√©es filtr√©es
st.subheader("DataFrame obtenu apr√®s l'extraction des articles")
st.info("Double-cliquer sur une case pour voir tout son contenu", icon="‚ÑπÔ∏è")

with st.expander("Faire d√©filer pour voir les donn√©es") : # Permet de d√©filer le tableau
    st.dataframe(donnees_filtres)   # Affiche le DataFrame sous forme de tableau interactif dans l'application

# Bouton de t√©l√©chargement
donnees_filtres.to_excel("donnees.xlsx", index=False, sheet_name="Feuille1")
st.download_button(label="T√©l√©charger le fichier .xlsx", data=open("donnees.xlsx", "rb"), file_name="donnees.xlsx", icon="‚¨áÔ∏è")

st.subheader("Exemple de diagramme et d'une courbe")
st.write("Nombre d'articles produits par ann√©e")

# Cr√©ation d'un graphique pour visualiser la fr√©quence des dates de publication
st.bar_chart(donnees_filtres['Ann√©e'].value_counts())  # Cr√©e un graphique √† barres qui montre la fr√©quence de publication des articles
st.line_chart(donnees_filtres['Ann√©e'].value_counts()) # Courbe montrant l'√©volution du nb d'articles produits s√©l√©ctionn√©s par l'API en fonction de l'ann√©e de publication

# Cr√©ation d'un nuage de mots des mots-cl√© les plus fr√©quents dans les articles 
st.subheader("Nuage de mots des mots-cl√© les plus fr√©quents")
st.info("La taille du mot varie en fonction de sa fr√©quence", icon="‚ÑπÔ∏è")

# V√©rification si les donn√©es sont vides
if donnees_filtres.empty:
    st.error("Aucune donn√©e s√©lectionn√©e. S√©lectionnez les donn√©es dans la barre lat√©rale.", icon="üö®")
    st.stop()

# Concat√©nation des titres et r√©sum√©s
text = " ".join(donnees_filtres['Titre'].astype(str) + " " + donnees_filtres['Abstract'].astype(str))
# G√©n√©ration du nuage de mots
wordcloud = WordCloud(width=800, height=400, background_color='white').generate(text)
# Affichage du nuage de mots
fig, ax = plt.subplots()
ax.imshow(wordcloud, interpolation='bilinear')
ax.axis("off")
st.pyplot(fig)

# Footer
st.markdown("---")
st.caption("Equipe 3 :  Joel - Ilyes - Razi - Vincent")